plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springModulithVersion', "1.3.0")
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.modulith:spring-modulith-starter-core'
//    implementation 'org.springframework.modulith:spring-modulith-starter-jdbc'
    implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.36'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//    testImplementation group: 'org.testng', name: 'com.springsource.org.testng', version: '5.9.0'


    testImplementation group: 'org.testng', name: 'testng', version: '7.10.2'
//    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.27.0'
//    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.9.2'


    implementation group: 'org.flywaydb', name: 'flyway-core', version: '11.0.0'



}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
    }
}

tasks.named('test') {
//TestNGOptions.findAll()
}
